syntax = "proto3";
package gradlegRPC;
option java_package = "io.grpc.coordinator";

import "google/protobuf/empty.proto";


service CoordinatorService {

  rpc coordinatorrobotreport(requestrobotreport) returns (responserobotreport){}

  rpc coordinatorcriticalpoint(coordinatorGetCriticalPointRequestMessage) returns (coordinatorGetCriticalPointResponseMessage);


  rpc coordinatorgetGreeting(robotsGreeting) returns (robotgreetingResponse);


  rpc coordinatorgetCurrentTime(timerequest) returns (timeresponse);

  rpc coordinatorgetRobotReportRequest(trackerRobotReportRequest) returns (requestrobotreport);

  rpc coordinatorgetOnPositionUpdate(onPositionUpdateMessage) returns (noneResponse);
  rpc coordinatorgetOnPositionUpdateEven(onPositionUpdateMessage) returns (noneResponse);

}


// this one is used for robots just sending their robot reports to the coordinator
message requestrobotreport{
  string req = 1;
  int32 robotid = 2;
  double x = 3;
  double y = 4;
  double z = 5;
  double roll = 6;
  double pitch = 7;
  double yaw = 8;
  int32 pathIndex = 9;
  double velocity = 10;
  double distanceTraveled = 11;
  int32 criticalPoint = 12;
}


message responserobotreport{
  string name = 1;
  int32 criticalPoint =2;
}


message trackerRobotReportRequest{
  string kan = 1;
  int32 robotID = 2;
}



message coordinatorGetCriticalPointRequestMessage {
  string kan = 1;
  int32 robotID = 2;
}

message coordinatorGetCriticalPointResponseMessage {
  int32 criticalPoint = 1;
}


message robotsGreeting {
  string kan = 1;
  int32 robotID = 2;
  string type = 3;
  string IP = 4;
  int32 port = 5;
  robotPose startPose = 6;
  robotPose endPose = 7;

  string timeStamp = 8;
  double maxAccel = 9;
  double maxVel = 10;
  double trackingPeriodInMillis = 11;
  bytes poseSteering = 13;
  bytes footPrint = 14;
}


message robotPose {
  double x = 1;
  double y = 2;
  double z = 3;
  double roll = 4;
  double pitch = 5;
  double yaw = 6;
}


message robotgreetingResponse {
  string name = 1;
  int32 numofReplicas = 2;
}

message getCurrentDependencies{
  string kan = 1;
  bytes depBytes = 2;
}

message noneResponse{
  string none = 1;
}

message tecrequest{
  string kan = 1;
  int32 robotID=2;

}

message tecresponse{
  string stringresponse =1;
  bytes tecStuff = 2;
}

message timerequest{
  string kan = 1;
}

message timeresponse{
  uint64 currentTime = 1;
}


message onPositionUpdateMessage{
  /*
  invoking an onPositionUpdate() method in the class holding the browser
  */
  bytes footPrintBytes = 1;
  // building a robotReport
  int32 robotid = 2;
  double x = 3;
  double y = 4;
  double z = 5;
  double roll = 6;
  double pitch = 7;
  double yaw = 8;
  int32 pathIndex = 9;
  double velocity = 10;
  double distanceTraveled = 11;
  int32 criticalPoint = 12;
}
